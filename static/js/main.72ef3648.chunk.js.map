{"version":3,"sources":["App.module.scss","components/Board/Board.module.scss","components/Card/Card.jsx","assets/formatTime.js","components/Header/Header.jsx","assets/shuffle.js","store/gameReducer.js","components/Board/Board.jsx","App.jsx","store/store.js","index.js","components/Card/Card.module.scss","components/Header/Header.module.scss"],"names":["module","exports","Card","id","isOpen","value","isOnBoard","isInterfaceBlocked","isGameStarted","setCardOpenCallback","disabled","className","s","card","active","hide","onClick","openCard","front","back","memo","formatTime","sec","Math","floor","Header","cardsGuessed","timer","startGameCallback","header","counter","button","shuffle","cards","res","i","length","randomNum","random","t","SET_CARD_OPEN","SET_LOCAL_TIMER","ADD_CARD_TO_OPEN_CARDS","CLOSE_ALL_CARDS","TOOGLE_BLOCKED_INTERFACE","TOOGLE_GAME_STARTED","ADD_CARD_TO_GUESSED_CARD","SET_TIMER_ID","SET_INTERVAL_ID","RESET_GAME","SET_GAME_TIME","initialState","openedCards","isLocalTimer","timerId","undefined","intervalId","setLocalTimerAC","bool","type","payload","closeAllCardsAC","toogleIsBlockedInterfaceAC","toggleisGameStartededAC","addCardsToGuessedThunk","id1","id2","dispatch","setTimeout","addCardToGuessedCardsAC","setCardOpen","getState","setCardOpenAC","gameReducer","setTimerIdAC","clearInterval","times","JSON","parse","localStorage","getItem","push","setItem","stringify","window","clearTimeout","startGame","setInterval","state","action","map","some","Board","useSelector","useState","setTimes","useEffect","scores","sort","a","b","slice","useDispatch","useCallback","board","results","resultsTimes","noResultsCase","time","index","clear","resetResultsButton","App","app_Container","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72ef3648.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_Container\":\"App_app_Container__2NJSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__3FNMR\",\"cards\":\"Board_cards__ZlLkF\",\"hide\":\"Board_hide__1Q3y9\",\"results\":\"Board_results__3vg6K\",\"resultsTimes\":\"Board_resultsTimes__20iYC\",\"resetResultsButton\":\"Board_resetResultsButton__3iG-a\",\"noResultsCase\":\"Board_noResultsCase__1J9mq\"};","import s from \"./Card.module.scss\"\r\nimport { memo } from \"react\"\r\n\r\nconst Card = ({ id, isOpen, value, isOnBoard, isInterfaceBlocked, isGameStarted, setCardOpenCallback }) => {\r\n  \r\n\r\n  const openCard = (id, value) => {\r\n    setCardOpenCallback(id, value)\r\n  }\r\n  \r\n  return <button\r\n      disabled={isInterfaceBlocked || !isOnBoard || !isGameStarted || isOpen}\r\n      className={`${s.card} ${isOpen && s.active} ${!isOnBoard && s.hide} ${!isGameStarted && s.disabled}`}\r\n      onClick={() => openCard(id, value)}>\r\n      <div className={s.front}></div>\r\n      <div className={s.back}>{value}</div>\r\n    </button>\r\n}\r\nexport default memo(Card)","export const formatTime = (sec) =>  {\r\n    if (sec <= 9) return `00:0${sec}`\r\n    if (sec > 9 && sec < 60) return `00:${sec}`\r\n    if (sec >= 60)\r\n      return `0${Math.floor(sec / 60)}:${\r\n        sec % 60 < 9 ? \"0\" + (sec % 60) : sec % 60\r\n      }`\r\n  }","import s from \"./Header.module.scss\"\r\nimport { formatTime } from '../../assets/formatTime'\r\nimport { memo } from \"react\"\r\n\r\nconst Header = ({ cardsGuessed, isGameStarted, timer, startGameCallback }) => {\r\n\r\n  return <div className={s.header}>\r\n    <div className={s.timer}>{formatTime(timer)}</div>\r\n    <div className={s.counter}>\r\n      {cardsGuessed}\r\n      <span>/16</span>\r\n    </div>\r\n    <button disabled={isGameStarted} className={`${s.button} ${isGameStarted && s.hide}`}onClick={startGameCallback}>Start</button>\r\n  </div>\r\n}\r\nexport default memo(Header)","export const shuffle = (cards) =>  {\r\n    let res = cards\r\n    for (let i = cards.length - 1; i > 0; i--) {\r\n      let randomNum = Math.floor(Math.random() * (i + 1))\r\n      let t = cards[randomNum]\r\n      cards[randomNum] = cards[i]\r\n      cards[i] = t\r\n    }\r\n    return res\r\n  }","import { shuffle } from \"../assets/shuffle\"\r\n\r\nconst SET_CARD_OPEN = \"SET_CARD_OPEN\"\r\nconst SET_LOCAL_TIMER = \"SET_LOCAL_TIMER\"\r\nconst ADD_CARD_TO_OPEN_CARDS = \"ADD_CARD_TO_OPEN_CARDS\"\r\nconst CLOSE_ALL_CARDS = \"CLOSE_ALL_CARDS\"\r\nconst TOOGLE_BLOCKED_INTERFACE = \"TOOGLE_BLOCKED_INTERFACE\"\r\nconst TOOGLE_GAME_STARTED = \"TOOGLE_GAME_STARTED\"\r\nconst ADD_CARD_TO_GUESSED_CARD = \"ADD_CARD_TO_GUESSED_CARD\"\r\nconst SET_TIMER_ID = \"SET_TIMER_ID\"\r\nconst SET_INTERVAL_ID = \"SET_INTERVAL_ID\"\r\nconst RESET_GAME = \"RESET_GAME\"\r\nconst SET_GAME_TIME = \"SET_GAME_TIME\"\r\n\r\nconst initialState = {\r\n  timer: 0,\r\n  isInterfaceBlocked: false,\r\n  openedCards: [],\r\n  cardsGuessed: 0,\r\n  isGameStarted: false,\r\n  isLocalTimer: false,\r\n  timerId: undefined,\r\n  intervalId: undefined,\r\n  cards: [\r\n    { id: 1, isOpen: false, value: \"cat\", isOnBoard: true },\r\n    { id: 2, isOpen: false, value: \"cat\", isOnBoard: true },\r\n    { id: 3, isOpen: false, value: \"dog\", isOnBoard: true },\r\n    { id: 4, isOpen: false, value: \"dog\", isOnBoard: true },\r\n    { id: 5, isOpen: false, value: \"fish\", isOnBoard: true },\r\n    { id: 6, isOpen: false, value: \"fish\", isOnBoard: true },\r\n    { id: 7, isOpen: false, value: \"pig\", isOnBoard: true },\r\n    { id: 8, isOpen: false, value: \"pig\", isOnBoard: true },\r\n    { id: 9, isOpen: false, value: \"mouse\", isOnBoard: true },\r\n    { id: 10, isOpen: false, value: \"mouse\", isOnBoard: true },\r\n    { id: 11, isOpen: false, value: \"bird\", isOnBoard: true },\r\n    { id: 12, isOpen: false, value: \"bird\", isOnBoard: true },\r\n    { id: 13, isOpen: false, value: \"snake\", isOnBoard: true },\r\n    { id: 14, isOpen: false, value: \"snake\", isOnBoard: true },\r\n    { id: 15, isOpen: false, value: \"monkey\", isOnBoard: true },\r\n    { id: 16, isOpen: false, value: \"monkey\", isOnBoard: true },\r\n  ],\r\n}\r\n\r\nconst gameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CARD_OPEN: {\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map((card) => {\r\n          if (card.id === action.payload) card.isOpen = true\r\n          return card\r\n        }),\r\n      }\r\n    }\r\n    case SET_LOCAL_TIMER: {\r\n      return {\r\n        ...state,\r\n        isLocalTimer: action.payload,\r\n      }\r\n    }\r\n    case ADD_CARD_TO_OPEN_CARDS: {\r\n      return {\r\n        ...state,\r\n        openedCards: [...state.openedCards, action.payload],\r\n      }\r\n    }\r\n    case CLOSE_ALL_CARDS: {\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map((card) => {\r\n          card.isOpen = false\r\n          return card\r\n        }),\r\n        openedCards: [],\r\n      }\r\n    }\r\n    case TOOGLE_BLOCKED_INTERFACE: {\r\n      return {\r\n        ...state,\r\n        isInterfaceBlocked: action.payload,\r\n      }\r\n    }\r\n    case TOOGLE_GAME_STARTED: {\r\n      return {\r\n        ...state,\r\n        isGameStarted: action.payload,\r\n      }\r\n    }\r\n    case ADD_CARD_TO_GUESSED_CARD: {\r\n      return {\r\n        ...state,\r\n        cardsGuessed: state.cardsGuessed + 2,\r\n        cards: state.cards.map((card) => {\r\n          if (action.payload.some((id) => id === card.id)) {\r\n            card.isOnBoard = false\r\n          }\r\n          return card\r\n        }),\r\n      }\r\n    }\r\n    case SET_GAME_TIME: {\r\n      return {\r\n        ...state,\r\n        timer: action.payload,\r\n      }\r\n    }\r\n    case SET_TIMER_ID: {\r\n      return {\r\n        ...state,\r\n        timerId: action.payload,\r\n      }\r\n    }\r\n    case SET_INTERVAL_ID: {\r\n      return {\r\n        ...state,\r\n        intervalId: action.payload,\r\n      }\r\n    }\r\n    case RESET_GAME: {\r\n      return {\r\n        ...state,\r\n        cardsGuessed: 0,\r\n        timer: 0,\r\n        cards: shuffle(\r\n          state.cards.map((card) => {\r\n            card.isOnBoard = true\r\n            return card\r\n          })\r\n        ),\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// actions\r\n\r\nexport const setLocalTimerAC = (bool) => {\r\n  return {\r\n    type: SET_LOCAL_TIMER,\r\n    payload: bool,\r\n  }\r\n}\r\n\r\nexport const setCardOpenAC = (id) => {\r\n  return {\r\n    type: SET_CARD_OPEN,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nexport const addCardToOpenedCardsAC = (data) => {\r\n  return {\r\n    type: ADD_CARD_TO_OPEN_CARDS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const closeAllCardsAC = () => {\r\n  return {\r\n    type: CLOSE_ALL_CARDS,\r\n  }\r\n}\r\n\r\nexport const toogleIsBlockedInterfaceAC = (bool) => {\r\n  return {\r\n    type: TOOGLE_BLOCKED_INTERFACE,\r\n    payload: bool,\r\n  }\r\n}\r\n\r\nexport const toggleisGameStartededAC = (bool) => {\r\n  return {\r\n    type: TOOGLE_GAME_STARTED,\r\n    payload: bool,\r\n  }\r\n}\r\n\r\nexport const addCardToGuessedCardsAC = (id1, id2) => {\r\n  return {\r\n    type: ADD_CARD_TO_GUESSED_CARD,\r\n    payload: [id1, id2],\r\n  }\r\n}\r\n\r\nconst setTimerIdAC = (id) => {\r\n  return {\r\n    type: SET_TIMER_ID,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nconst setIntervalIdAC = (id) => {\r\n  return {\r\n    type: SET_INTERVAL_ID,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nconst setGameTimeAC = (seconds) => {\r\n  return {\r\n    type: SET_GAME_TIME,\r\n    payload: seconds,\r\n  }\r\n}\r\n\r\n//thunks\r\n\r\nconst closeAllCardsThunk = () => {\r\n  return (dispatch) => {\r\n    dispatch(toogleIsBlockedInterfaceAC(true))\r\n    setTimeout(() => {\r\n      dispatch(closeAllCardsAC())\r\n      dispatch(toogleIsBlockedInterfaceAC(false))\r\n    }, 1000)\r\n  }\r\n}\r\n\r\nconst addCardsToGuessedThunk = (id1, id2) => {\r\n  return (dispatch) => {\r\n    dispatch(toogleIsBlockedInterfaceAC(true))\r\n    setTimeout(() => {\r\n      dispatch(addCardToGuessedCardsAC(id1, id2))\r\n      dispatch(toogleIsBlockedInterfaceAC(false))\r\n    }, 1000)\r\n  }\r\n}\r\n\r\nconst resetGame = () => {\r\n  return {\r\n    type: RESET_GAME,\r\n  }\r\n}\r\n\r\nexport const endGame = () => {\r\n  return (dispatch, getState) => {\r\n    let {intervalId, timer} = getState().gameReducer\r\n    dispatch(toggleisGameStartededAC(false))\r\n    clearInterval(intervalId)\r\n\r\n    let times = JSON.parse(localStorage.getItem(\"scores\")) || []\r\n    times.push(timer)\r\n    localStorage.setItem(\"scores\", JSON.stringify(times))\r\n  }\r\n}\r\n\r\nexport let setCardOpen = (id, value) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(setCardOpenAC(id))\r\n    let { openedCards, isLocalTimer, cardsGuessed } = getState().gameReducer\r\n    if (!isLocalTimer) {\r\n      dispatch(setLocalTimerAC(true))\r\n      let timerId = setTimeout(() => {\r\n        dispatch(setLocalTimerAC(false))\r\n        dispatch(closeAllCardsAC())\r\n      }, 3000)\r\n      dispatch(setTimerIdAC(timerId))\r\n    }\r\n    if (openedCards.length === 1) {\r\n      if (openedCards[0].value === value) {\r\n        dispatch(addCardsToGuessedThunk(openedCards[0].id, id))\r\n        if (cardsGuessed === 14) dispatch(endGame())\r\n      }\r\n      dispatch(closeAllCardsThunk())\r\n      dispatch(setLocalTimerAC(false))\r\n      window.clearTimeout(getState().gameReducer.timerId)\r\n    } else {\r\n      dispatch(addCardToOpenedCardsAC({ id, value }))\r\n    }\r\n  }\r\n}\r\n\r\nexport const startGame = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch(toggleisGameStartededAC(true))\r\n    dispatch(resetGame())\r\n    let timer = getState().gameReducer.timer\r\n    let intervalId = setInterval(() => {\r\n      timer++\r\n      dispatch(setGameTimeAC(timer))\r\n    }, 1000)\r\n    dispatch(setIntervalIdAC(intervalId))\r\n  }\r\n}\r\n\r\nexport default gameReducer","import { memo, useCallback, useEffect, useState } from 'react'\r\nimport Card from '../Card/Card'\r\nimport Header from '../Header/Header'\r\nimport s from \"./Board.module.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { formatTime } from \"../../assets/formatTime\"\r\nimport { setCardOpen, startGame } from '../../store/gameReducer'\r\n\r\nconst Board = () => {\r\n\r\n  const { cards, isGameStarted, cardsGuessed, timer, isInterfaceBlocked } = useSelector(({gameReducer}) => gameReducer)\r\n  let [times, setTimes] = useState([])\r\n\r\n  useEffect(() => {\r\n    let scores = JSON.parse(localStorage.getItem(\"scores\")) || []\r\n    scores.sort((a, b) => a - b)\r\n    setTimes(scores.slice(0, 10))\r\n  }, [isGameStarted])\r\n\r\n  const resetResults = () => {\r\n    localStorage.clear()\r\n    setTimes([])\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const startGameCallback = useCallback(() => {\r\n    dispatch(startGame())\r\n  }, [])\r\n\r\n  const setCardOpenCallback = useCallback((id, value) => {\r\n    dispatch(setCardOpen(id, value))\r\n  }, [])\r\n\r\n  return <div className={s.board}>\r\n    <Header cardsGuessed={cardsGuessed} isGameStarted={isGameStarted} timer={timer} startGameCallback={startGameCallback}/>\r\n\r\n    <div className={`${s.cards} ${!isGameStarted && s.hide}`}>\r\n      {cards.map((card) => (<Card key={card.id} {...card} isInterfaceBlocked={isInterfaceBlocked} \r\n      isGameStarted={isGameStarted} setCardOpenCallback={setCardOpenCallback}/>))}\r\n    </div>\r\n\r\n    <div className={`${s.results} ${isGameStarted && s.hide}`}>\r\n      <div className={s.resultsTimes}>Best results:</div>\r\n      {times.length === 0 && <span className={s.noResultsCase}>{\"You don't have any results yet :(\"}</span>}\r\n      {times.map((time, index) => <div key={index} className={s.time}>{index+ 1 + \") \"}{formatTime(time)}</div>)}\r\n      {times.length !== 0 && <button onClick={resetResults} className={s.resetResultsButton}>Reset results</button>}\r\n    </div>\r\n  </div>\r\n}\r\nexport default memo(Board)","import s from \"./App.module.scss\"\nimport Board from \"./components/Board/Board\"\n\n\nconst App = () => {\n  return <div>\n      <div className={s.app_Container}>\n        <Board />\n      </div>\n    </div>\n}\nexport default App","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport gameReducer from \"./gameReducer\"\r\n\r\n\r\nconst rootReducer = combineReducers({gameReducer})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2O5Y1\",\"front\":\"Card_front__12DC-\",\"back\":\"Card_back__2owrI\",\"active\":\"Card_active__3vsQ8\",\"hide\":\"Card_hide__1b6Kz\",\"disabled\":\"Card_disabled__2Rq2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CSBk\",\"counter\":\"Header_counter__34jyD\",\"timer\":\"Header_timer__3bSY4\",\"button\":\"Header_button__-nX4t\",\"hide\":\"Header_hide__2F3ur\"};"],"sourceRoot":""}